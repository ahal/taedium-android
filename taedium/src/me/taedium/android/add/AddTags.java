package me.taedium.android.add;

import java.util.ArrayList;

import me.taedium.android.FirstStart;
import me.taedium.android.R;
import me.taedium.android.api.Caller;
import android.app.Dialog;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.ContextThemeWrapper;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.RelativeLayout.LayoutParams;

public class AddTags extends WizardActivity {
    private static final String MODULE = "ADD_TAGS";
    private static final int DIALOG_ADD_MANUAL_TAG = 615;
    private RelativeLayout rlAddTag;
    private Button bAddNewTag;
    
    private ArrayList<String> tags;
    private String[] autotags;
    
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.add_6_tags);
        
        initializeWizard(this, FirstStart.class, 0);
        data = getIntent().getExtras();
        
        // Override the default next button behaviour
        bNext.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                fillData();
                
                // Submit the activity to the server
                boolean success = Caller.getInstance().addRecommendation(data);
                if (success) {
                    Toast.makeText(AddTags.this, getString(R.string.msgAddSuccess), Toast.LENGTH_LONG).show();
                } else {
                    Toast.makeText(AddTags.this, getString(R.string.msgAddFailure), Toast.LENGTH_LONG).show();
                }
                // Return back to first activity (pop other activities off stack)
                Intent i = new Intent(AddTags.this, FirstStart.class);
                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                startActivity(i);
            }
        });
        bNext.setText("Submit");

        tags = new ArrayList<String>();
        restoreData();
        rlAddTag = (RelativeLayout)findViewById(R.id.rlAddTagScrollableContent);
        
        autotags = getAutoGeneratedTags();
        Log.i(MODULE, "Auto-generated tags: " + autotags.length);
        TextView tvAutoTag = (TextView)findViewById(R.id.tvAddAutoTag);
        TextView tvManualTag = (TextView)findViewById(R.id.tvAddManualTag);
        if (autotags.length == 0) {
            tvAutoTag.setVisibility(View.GONE);
            tvManualTag.setText(R.string.tvAddManualTagNoAuto);
        } else {
            // Programmatically create the check boxes for the autotags
            for (int i = 0; i < autotags.length; ++i){ 
                CheckBox box = new CheckBox(AddTags.this);
                RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,
                                                                                     LayoutParams.WRAP_CONTENT);
                params.addRule(RelativeLayout.BELOW, i==0 ? tvAutoTag.getId() : i);
                box.setLayoutParams(params);
                box.setId(i+1);
                box.setText(autotags[i]);
                box.setTextColor(Color.BLACK);
                for (String tag: tags) {
                    if (tag.equals(autotags[i])) {
                        box.setChecked(true);
                        break;
                    }
                }
                // Add onChecked listener
                box.setOnCheckedChangeListener(new OnCheckedChangeListener() {
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (isChecked) {
                            tags.add(buttonView.getText().toString());
                            bNext.setEnabled(true);
                        } else {
                            tags.remove(buttonView.getText().toString());
                            if (tags.size() == 0) {
                                bNext.setEnabled(false);
                            }
                        }
                    }
                });
                rlAddTag.addView(box);
                
                params = (RelativeLayout.LayoutParams)tvManualTag.getLayoutParams();
                params.addRule(RelativeLayout.BELOW, i+1);
            }
        }
        
        bAddNewTag = (Button)findViewById(R.id.bAddNewTag);
        bAddNewTag.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                showDialog(DIALOG_ADD_MANUAL_TAG);
            }
        });
        
        if (tags.size() == 0) {
            bNext.setEnabled(false);
        }
    }

    @Override
    protected Dialog onCreateDialog(int id) {
        final Dialog dialog;
        dialog = new Dialog(new ContextThemeWrapper(this, R.style.Dialog));
        switch(id) {
            case DIALOG_ADD_MANUAL_TAG:
                dialog.setContentView(R.layout.add_manual_tag);
                dialog.setTitle("Enter a Tag");
                final EditText etAddTag = (EditText)dialog.findViewById(R.id.etAddTag);
                Button bAdd = (Button)dialog.findViewById(R.id.bAdd);
                bAdd.setOnClickListener(new View.OnClickListener() {
                    public void onClick(View v) {
                        String text = etAddTag.getText().toString();
                        if (!text.equals("") && !tags.contains(text)) {
                            tags.add(text);
                            bNext.setEnabled(true);
                        }
                        etAddTag.setText("");
                        Toast.makeText(AddTags.this, "Added tag: " + text, Toast.LENGTH_SHORT).show();
                    }
                });
                Button bDone = (Button)dialog.findViewById(R.id.bDone);
                bDone.setOnClickListener(new View.OnClickListener() {
                    public void onClick(View v) {
                        dismissDialog(DIALOG_ADD_MANUAL_TAG);
                    }
                });
                break;
            default:
                // dialog not known to this activity
                return super.onCreateDialog(id);
        }
        return dialog;
    }
    
    private String[] getAutoGeneratedTags() {
        if (data.containsKey("autotags")) {
            return data.getStringArray("autotags");
        }
        String name = data.getString("name");
        String desc = data.getString("desc");
        return Caller.getInstance().getRecommendedTags(name, desc);
    }

    @Override
    protected void fillData() {
        data.putStringArrayList("tags", tags);
        // keep track of auto tags to prevent un-necessary api calls 
        data.putStringArray("autotags", autotags);
    }

    @Override
    protected void restoreData() {
        if (data.containsKey("tags")) {
            tags = data.getStringArrayList("tags");
        }
    }
}
